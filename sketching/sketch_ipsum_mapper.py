#!/usr/bin/env python2

import sys
import string
import random
import zlib

if len(sys.argv) < 3:
   print "usage: "+sys.argv[0]+" nb_hash_fct size_hash_output"
   exit();

number_hash_function=int(sys.argv[1]) # should be less than 512
number_sketch=int(sys.argv[2])
range_number_hash_function = range(number_hash_function)

# 512 different seeds
hash_seed=[14635, 54267, 18608, 22739, 15701, 6024, 4972, 46807, 42749, 37393, 10548, 41837, 25391, 31709, 41532, 47466, 41589, 37095, 46602, 63722, 50907, 51487, 1822, 43497, 24174, 26598, 45379, 18166, 61427, 5942, 36886, 33658, 21123, 24482, 64631, 64816, 34135, 48009, 10245, 17061, 25126, 58502, 49861, 39376, 34103, 34610, 13527, 37290, 44506, 24348, 26819, 28941, 4149, 5881, 60716, 7708, 46979, 47680, 5408, 11105, 1194, 58547, 58960, 38817, 48124, 57973, 27179, 13451, 4213, 44857, 45616, 63945, 25087, 5773, 27281, 36228, 51223, 33685, 3219, 12528, 63178, 4793, 57855, 46531, 10046, 55310, 24581, 53077, 7543, 40674, 24720, 31087, 30046, 21489, 56485, 40133, 37155, 18078, 37564, 43370, 54585, 22917, 7370, 47371, 42498, 16771, 21046, 56038, 2011, 6185, 33037, 5727, 34128, 32671, 41667, 38161, 11768, 10080, 41210, 65126, 21113, 22039, 37045, 55155, 34130, 25940, 8966, 8420, 25528, 43360, 5688, 61296, 46453, 20937, 57270, 23865, 3248, 30393, 37179, 19211, 46252, 4707, 12130, 59664, 12845, 19321, 30847, 27762, 20401, 46845, 28187, 56104, 18058, 30309, 46420, 24400, 32811, 15234, 1876, 17642, 26804, 51086, 57308, 52753, 32454, 40148, 7962, 51261, 6756, 19586, 20684, 23045, 38991, 6172, 8410, 9263, 33555, 46428, 55923, 52340, 6317, 62307, 52533, 37022, 55100, 34480, 43293, 33263, 52132, 25420, 35046, 18597, 60857, 23363, 53783, 5870, 1825, 53947, 38489, 14482, 17205, 47143, 22851, 29018, 3031, 31708, 52263, 62987, 57027, 21643, 24394, 11772, 10918, 30431, 18801, 27853, 30099, 38096, 53081, 15106, 59354, 60238, 50032, 5483, 1004, 4372, 48008, 56230, 22357, 47018, 50455, 55607, 39131, 65384, 5268, 13926, 24879, 13760, 49496, 40037, 8188, 27985, 61358, 62360, 5751, 4262, 40598, 33603, 50201, 1809, 32349, 58200, 33505, 54771, 4054, 17965, 47764, 17204, 45739, 61338, 40073, 36935, 42203, 27205, 40825, 13520, 54069, 42301, 59653, 56768, 7471, 28549, 11430, 61329, 49509, 28390, 25719, 20407, 38928, 32784, 4618, 49349, 3778, 22353, 18929, 9845, 58557, 56300, 4655, 52609, 17879, 8491, 54246, 62225, 23875, 7, 10810, 2628, 27435, 65127, 1808, 63803, 33318, 31447, 63628, 61557, 35035, 51412, 35037, 44587, 27445, 55093, 5661, 44345, 62413, 43983, 56847, 20802, 34639, 41260, 33627, 24417, 60937, 32120, 57631, 36178, 23805, 27283, 27670, 10630, 29046, 11110, 49658, 34011, 28992, 48158, 7534, 59035, 13497, 23506, 55031, 19820, 62822, 15843, 34075, 26151, 28430, 61472, 60005, 9836, 23576, 17349, 50581, 24051, 47669, 19512, 51536, 7840, 12115, 16174, 59540, 33669, 250, 21020, 49831, 22371, 27383, 29133, 34858, 61528, 22245, 17528, 60904, 24412, 28810, 63332, 6034, 35303, 36649, 21152, 34512, 9344, 52992, 35649, 15625, 2408, 62897, 54633, 36523, 15906, 28523, 30568, 30656, 7099, 62639, 52862, 31404, 27639, 59279, 48150, 35883, 57435, 31778, 43519, 60902, 7926, 54276, 19205, 32775, 57822, 12831, 40659, 40268, 56099, 62141, 2635, 8796, 18802, 46663, 48439, 53851, 23822, 11156, 2092, 47442, 58594, 57810, 43337, 58238, 37742, 20069, 36227, 49725, 37951, 10748, 18887, 65403, 58700, 44892, 26708, 57461, 1852, 32248, 29062, 6872, 30656, 11431, 30666, 35281, 19417, 53299, 54710, 16886, 29117, 63872, 46316, 11003, 54227, 3083, 32609, 27942, 3015, 46366, 27420, 59637, 21673, 63979, 9709, 12300, 7638, 32836, 45223, 4266, 12552, 40941, 29785, 58842, 35968, 5075, 36444, 50538, 64539, 24639, 39627, 34919, 63302, 32085, 36803, 62670, 45844, 5672, 29768, 6059, 56869, 58694, 34763, 19158, 44464, 45380, 56080, 60166, 28092, 53894, 61520, 61386, 31501, 60683, 50031, 18658, 41785, 53901, 14794, 2341]

# input comes from STDIN (standard input)
for line in sys.stdin:

    # ignore header
    if line.startswith('!'):
      continue    
    
    # get each fields of the tuple 
    part = line.partition(" ")
    ts = part[0]
    pkt = part[2]
    fields = pkt.split()
 
    # Sketch once using IP src and once using IP dst
    for pass_number, field_index in enumerate([0,2]):  
        ip = fields[field_index]

        for hash_index in range_number_hash_function:
                hash_value = zlib.crc32(ip,hash_seed[hash_index])
                sketch_index = hash_value%number_sketch
                assert sketch_index <= number_sketch

                key = str(hash_index+number_hash_function*pass_number)+","+str(sketch_index)+","+ts
                sys.stdout.write(key+"\t"+pkt)
